extends layout

block content
  .container.mt-4
    .d-flex.flex-wrap.justify-content-between.align-items-center.mb-4.pb-2.border-bottom
      h1.mb-0.me-3 Internaciones
      
      .flex-grow-1.me-3(style="max-width: 250px;")
        input#filtroDNI.form-control(type="text", placeholder="Filtrar por DNI...")

      .btn-group(role="group")
        button.btn.btn-sm.btn-outline-secondary.filtro-estado.active(type="button", data-estado="TODOS") Todos
        button.btn.btn-sm.btn-outline-success.filtro-estado(type="button", data-estado="ACTIVA") Activas
        button.btn.btn-sm.btn-outline-warning.filtro-estado(type="button", data-estado="PENDIENTE") Pendientes

    .accordion.mb-4#accordionNuevoIngreso
      .accordion-item
        h2.accordion-header#headingOne
          button.accordion-button.collapsed(type='button', data-bs-toggle='collapse', data-bs-target='#collapseOne')
            | Registrar Nueva Admisión
        #collapseOne.accordion-collapse.collapse(data-bs-parent='#accordionNuevoIngreso')
          .accordion-body
            form(action="/admision", method="POST")
              .row.g-3
                .col-md-6
                  label.form-label DNI del Paciente
                  input.form-control(type="text", name="dni_paciente", list="lista_pacientes", placeholder="Escriba el DNI del paciente", required)
                  datalist#lista_pacientes
                    each paciente in pacientes
                      option(value=paciente.dni) #{paciente.nombre_completo}
                .col-md-6
                  label.form-label Tipo de Ingreso
                  select.form-select(name="tipo_ingreso", required)
                    option(value="Programado" selected) Programado
                    option(value="Derivacion") Derivación
                    option(value="Emergencia") Emergencia
                .col-12
                  label.form-label Motivo de la Admisión
                  textarea.form-control(name="motivo", rows="2", placeholder="Ej: Neumonía, control post-operatorio...", required)
              .text-end.mt-3
                button.btn.btn-primary(type="submit") Iniciar Admisión

    .row.g-4
      if internaciones.length > 0
        each internacion in internaciones
          .col-md-6.col-lg-4
            .card.h-100.internacion-card(
              class=`estado-${internacion.estado.toLowerCase()}`,
              data-dni=internacion.Paciente.dni,
              data-estado=internacion.estado
            )
              .card-header.d-flex.justify-content-between.align-items-center
                h5.mb-0.text-truncate #{internacion.Paciente.nombre_completo}
                - const estadoClase = internacion.estado === 'PENDIENTE' ? 'bg-warning text-dark' : (internacion.estado === 'ACTIVA' ? 'bg-success' : 'bg-secondary');
                span.badge(class=estadoClase)= internacion.estado
              .card-body
                p.card-text
                  strong DNI: 
                  | #{internacion.Paciente.dni}
                  br
                  strong Motivo: 
                  | #{internacion.motivo}
                  br
                  strong Fecha Ingreso: 
                  | #{new Date(internacion.fecha_ingreso).toLocaleString('es-AR')}
              .card-footer.bg-white.border-0.text-end
                if internacion.estado === 'PENDIENTE'
                  a.btn.btn-info.btn-sm(href=`/internaciones/${internacion.id}/asignar-cama`) Asignar Cama
                else if internacion.estado === 'ACTIVA'
                  a.btn.btn-primary.btn-sm(href=`/internaciones/${internacion.id}`) Ver Ficha
      else
        .col-12
          .alert.alert-light.text-center No hay internaciones para mostrar.

block scripts
  script.
    document.addEventListener('DOMContentLoaded', () => {
      const filtroDniInput = document.getElementById('filtroDNI');
      const botonesEstado = document.querySelectorAll('.filtro-estado');
      const internacionCards = document.querySelectorAll('.internacion-card');
      let estadoActivo = 'TODOS';

      function filtrarTarjetas() {
        const textoFiltro = filtroDniInput.value.toLowerCase();

        internacionCards.forEach(card => {
          const dniPaciente = card.dataset.dni.toLowerCase();
          const estadoCard = card.dataset.estado.toUpperCase();

          const coincideDni = dniPaciente.includes(textoFiltro);
          const coincideEstado = (estadoActivo === 'TODOS' || estadoCard === estadoActivo);

          if (coincideDni && coincideEstado) {
            card.parentElement.style.display = '';
          } else {
            card.parentElement.style.display = 'none';
          }
        });
      }

      filtroDniInput.addEventListener('keyup', filtrarTarjetas);

      botonesEstado.forEach(boton => {
        boton.addEventListener('click', function() {
          botonesEstado.forEach(b => b.classList.remove('active'));
          this.classList.add('active');
          
          estadoActivo = this.dataset.estado;
          filtrarTarjetas();
        });
      });
    });